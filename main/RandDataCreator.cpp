#pragma once
#include "RandDataCreator.h"

std::vector<std::string> CreateRand::ManNames{
	"Авдей", "Авксентий", "Агафон", "Акакий", "Александр", "Алексей", "Альберт", "Анатолий", "Андрей", "Антон", "Антонин", "Анфим", "Аристарх", 
	"Аркадий", "Арсений", "Артём", "Артемий", "Артур", "Архипп", "Афанасий", "Богдан", "Борис", "Вавила", "Вадим", "Валентин", "Валерий", "Валерьян", 
	"Варлам", "Варсонофий", "Варфоломей", "Василий", "Венедикт", "Вениамин", "Викентий", "Виктор", "Виссарион", "Виталий", "Владимир", "Владислав", 
	"Владлен", "Влас", "Всеволод", "Вячеслав", "Гавриил", "Галактион", "Геласий", "Геннадий", "Георгий", "Герасим", "Герман", "Германн", "Глеб", 
	"Гордей", "Григорий", "Данакт", "Даниил", "Демид", "Демьян", "Денис", "Дмитрий", "Добрыня", "Донат", "Дорофей", "Евгений", "Евграф", "Евдоким", 
	"Евсей", "Евстафий", "Егор", "Емельян", "Еремей", "Ермолай", "Ерофей", "Ефим", "Ефрем", "Ждан", "Зиновий", "Иакинф", "Иван", "Игнатий", "Игорь", 
	"Изот", "Илья", "Иннокентий", "Ираклий", "Ириней", "Исаак", "Исидор", "Иуда", "Иулиан", "Капитон", "Ким", "Кир", "Кирилл", "Климент", "Кондрат", 
	"Конон", "Константин", "Корнилий", "Кузьма", "Куприян", "Лаврентий", "Лев", "Леонид", "Леонтий", "Логгин", "Лука", "Лукий", "Лукьян", "Магистриан", 
	"Макар", "Максим", "Мамонт", "Марк", "Мартын", "Матвей", "Мелентий", "Мина", "Мирослав", "Митрофан", "Михаил", "Мстислав", "Назар", "Нестор", 
	"Никандр", "Никанор", "Никита", "Никифор", "Никодим", "Николай", "Никон", "Олег", "Онисим", "Онуфрий", "Павел", "Паисий", "Панкратий", "Пантелеймон", 
	"Парфений", "Пафнутий", "Пахомий", "Пётр", "Платон", "Поликарп", "Порфирий", "Потап", "Пров", "Прокопий", "Протасий", "Прохор", "Разумник", "Родион", 
	"Родослав", "Роман", "Ростислав", "Руслан", "Савва", "Савелий", "Самуил", "Святополк", "Святослав", "Севастьян", "Семён", "Серафим", "Сергей", 
	"Сила", "Сильвестр", "Созон", "Софрон", "Спиридон", "Станислав", "Степан", "Тарас", "Тимофей", "Тимур", "Тит", "Тихон", "Трифон", "Трофим", "Урбан", 
	"Фаддей", "Фёдор", "Федосей", "Федот", "Феликс", "Феоктист", "Филат", "Филимон", "Филипп", "Фирс", "Фока", "Фома", "Фотий", "Фрол", "Харитон", 
	"Хрисанф", "Христофор", "Эдуард", "Эраст", "Юлиан", "Юрий", "Юстин", "Яков", "Якун", "Ярослав"
};
std::vector<std::string> CreateRand::ManSurnames{
	"Смирнов", "Иванов", "Кузнецов", "Соколов", "Попов", "Лебедев", "Козлов", "Новиков", "Морозов", "Петров", "Волков", "Соловьёв", "Васильев", "Зайцев", 
	"Павлов", "Семёнов", "Голубев", "Виноградов", "Богданов", "Воробьёв", "Фёдоров", "Михайлов", "Беляев", "Тарасов", "Белов", "Комаров", "Орлов", "Киселёв", 
	"Макаров", "Андреев", "Ковалёв", "Ильин", "Гусев", "Титов", "Кузьмин", "Кудрявцев", "Баранов", "Куликов", "Алексеев", "Степанов", "Яковлев", "Сорокин", 
	"Сергеев", "Романов", "Захаров", "Борисов", "Королёв", "Герасимов", "Пономарёв", "Григорьев", "Лазарев", "Медведев", "Ершов", "Никитин", "Соболев", 
	"Рябов", "Поляков", "Цветков", "Данилов", "Жуков", "Фролов", "Журавлёв", "Николаев", "Крылов", "Максимов", "Сидоров", "Осипов", "Белоусов", "Федотов", 
	"Дорофеев", "Егоров", "Матвеев", "Бобров", "Дмитриев", "Калинин", "Анисимов", "Петухов", "Антонов", "Тимофеев", "Никифоров", "Веселов", "Филиппов", 
	"Марков", "Большаков", "Суханов", "Миронов", "Ширяев", "Александров", "Коновалов", "Шестаков", "Казаков", "Ефимов", "Денисов", "Громов", "Фомин", 
	"Давыдов", "Мельников", "Щербаков", "Блинов", "Колесников", "Карпов", "Афанасьев", "Власов", "Маслов", "Исаков", "Тихонов", "Аксёнов", "Гаврилов", 
	"Родионов", "Котов", "Горбунов", "Кудряшов", "Быков", "Зуев", "Третьяков", "Савельев", "Панов", "Рыбаков", "Суворов", "Абрамов", "Воронов", "Мухин", 
	"Архипов", "Трофимов", "Мартынов", "Емельянов", "Горшков", "Чернов", "Овчинников", "Селезнёв", "Панфилов", "Копылов", "Михеев", "Галкин", "Назаров", 
	"Лобанов", "Лукин", "Беляков", "Потапов", "Некрасов", "Хохлов", "Жданов", "Наумов", "Шилов", "Воронцов", "Ермаков", "Дроздов", "Игнатьев", "Савин", 
	"Логинов", "Сафонов", "Капустин", "Кириллов", "Моисеев", "Елисеев", "Кошелев", "Костин", "Горбачёв", "Орехов", "Ефремов", "Исаев", "Евдокимов", "Калашников", 
	"Кабанов", "Носков", "Юдин", "Кулагин", "Лапин", "Прохоров", "Нестеров", "Харитонов", "Агафонов", "Муравьёв", "Ларионов", "Федосеев", "Зимин", "Пахомов", 
	"Шубин", "Игнатов", "Филатов", "Крюков", "Рогов", "Кулаков", "Терентьев", "Молчанов", "Владимиров", "Артемьев", "Гурьев", "Зиновьев", "Гришин", "Кононов", 
	"Дементьев", "Ситников", "Симонов", "Мишин", "Фадеев", "Комиссаров", "Мамонтов", "Носов", "Гуляев", "Шаров", "Устинов", "Вишняков", "Евсеев", "Лаврентьев", 
	"Брагин", "Константинов", "Корнилов", "Авдеев", "Зыков", "Бирюков", "Шарапов", "Никонов", "Щукин", "Дьячков", "Одинцов", "Сазонов", "Якушев", "Красильников", 
	"Гордеев", "Самойлов", "Князев", "Беспалов", "Уваров", "Шашков", "Бобылёв", "Доронин", "Белозёров", "Рожков", "Самсонов", "Мясников", "Лихачёв", "Буров", 
	"Сысоев", "Фомичёв", "Русаков", "Стрелков", "Гущин", "Тетерин", "Колобов", "Субботин", "Фокин", "Блохин", "Селиверстов", "Пестов", "Кондратьев", "Силин", 
	"Меркушев", "Лыткин", "Туров"
};
std::vector<std::string> CreateRand::ManPatron{
	"Абакумович", "Абрамович", "Абросимович", "Аввакумович", "Августович", "Авдеевич", "Авдиевич", "Авенирович", "Авериевич", "Аверкиевич", "Аверьянович", 
	"Аврамович", "Агапович", "Агафонович", "Аггеевич", "Адамович", "Адрианович", "Азарович", "Акимович", "Акинфович", "Аксёнович", "Александрович", 
	"Алексеевич", "Альбертович", "Альфредович", "Амосович", "Андреевич", "Андрианович", "Андронович", "Андроникович", "Аникеевич", "Аникиевич", "Анисимович", 
	"Антипович", "Антонович", "Антонинович", "Антропович", "Ануфриевич", "Ардалионович", "Ардальонович", "Арефович", "Аристархович", "Арнольдович", "Аронович", 
	"Артамонович", "Артёмович", "Артурович", "Архипович", "Аскольдович", "Афиногенович", "Бенедиктович", "Богданович", "Бонифатович", "Борисович", "Вадимович", 
	"Валентинович", "Валерианович", "Валерьянович", "Варламович", "Варсонофович", "Варфоломеевич", "Васильевич", "Велимирович", "Венедиктович", "Вениаминович", 
	"Веньяминович", "Викторович", "Викториевич", "Викторинович", "Викулович", "Викулич", "Виленович", "Виленинович", "Вильгельмович", "Виссарионович", "Витольдович", 
	"Владиленович", "Владимирович", "Владленович", "Власович", "Вонифатович", "Всеволодович", "Вуколович", "Гавриилович", "Галактионович", "Гелиевич", "Генрихович", 
	"Георгиевич", "Герасимович", "Германович", "Гермогенович", "Глебович", "Гордеевич", "Григорьевич", "Давидович", "Давыдович", "Даниилович", "Демидович", 
	"Демьянович", "Денисович", "Димитриевич", "Диомидович", "Дионисиевич", "Дмитриевич", "Донатович", "Доримедонтович", "Дормедонтович", "Дормидонтович", 
	"Дорофеевич", "Евграфович", "Евграфьевич", "Евдокимович", "Евменович", "Евсеевич", "Евстигнеевич", "Евстратович", "Егорович", "Елизарович", "Елисеевич", 
	"Елистратович", "Емельянович", "Епифанович", "Еремеевич", "Ермилович", "Ермилич", "Ермильевич", "Ермолаевич", "Ерофеевич", "Ефимович", "Ефремович", 
	"Захарович", "Зенонович", "Зосимович", "Зосимич", "Иакимович", "Иакинфович", "Иванович", "Игнатович", "Игоревич", "Изосимович", "Изотович", "Иларионович", 
	"Илиодорович", "Ильич", "Иоаннович", "Ионич", "Иосифович", "Ипатович", "Ипполитович", "Исаакович", "Исаакиевич", "Исаевич", "Исакович", "Исакиевич", 
	"Исидорович", "Иустинович", "Казимирович", "Каллиникович", "Каллистратович", "Капитонович", "Карлович", "Карпович", "Касьянович", "Кимович", "Киприанович", 
	"Кириакович", "Кирсанович", "Клавдиевич", "Климович", "Климентович", "Кондратович", "Кондратьевич", "Кононович", "Константинович", "Корнеевич", 
	"Корнилович", "Ксенофонтович", "Кузьмич", "Куприянович", "Лаврович", "Лазаревич", "Ларионович", "Львович", "Леонович", "Леонардович", "Леонидович", 
	"Леопольдович", "Логвинович", "Лукич", "Лукьянович", "Маевич", "Макарович", "Максимович", "Максимианович", "Максимилианович", "Максимильянович", "Мануилович", 
	"Маркович", "Маркелович", "Марленович", "Мартимьянович", "Мартинович", "Мартинианович", "Мартынович", "Мартьянович", "Матвеевич", "Меркулович", "Милиевич", 
	"Минич", "Минаевич", "Миронович", "Митрофанович", "Михеевич", "Модестович", "Моисеевич", "Мокеевич", "Мокиевич", "Назарович", "Наркисович", "Наумович", 
	"Нестерович", "Несторович", "Нефёдович", "Никандрович", "Никанорович", "Никитич", "Никифорович", "Никодимович", "Николаевич", "Никонович", "Нилович", 
	"Нифонтович", "Олегович", "Олимпиевич", "Онисимович", "Онуфриевич", "Орестович", "Осипович", "Оскарович", "Остапович", "Павлович", "Павлинович", 
	"Памфилович", "Памфильевич", "Панкратович", "Пантелеевич", "Пантелеймонович", "Панфилович", "Парамонович", "Парменович", "Пармёнович", "Парфёнович", 
	"Парфентьевич", "Патрикеевич", "Патрикиевич", "Пахомович", "Петрович", "Пименович", "Платонович", "Полиевктович", "Полиектович", "Поликарпович", 
	"Порфирович", "Потапович", "Прович", "Проклович", "Прокопович", "Прокофьевич", "Протасович", "Прохорович", "Радиевич", "Рафаилович", "Робертович", 
	"Родионович", "Романович", "Рудольфович", "Рюрикович", "Саввич", "Савватеевич", "Савёлович", "Самойлович", "Самсонович", "Самуилович", "Севастьянович", 
	"Северьянович", "Селиванович", "Селивёрстович", "Селифанович", "Семёнович", "Серафимович", "Сергеевич", "Сидорович", "Сильвестрович", "Симонович", 
	"Созонович", "Созонтович", "Созонтьевич", "Соломонович", "Софонович", "Софронович", "Спиридонович", "Степанович", "Сысоевич", "Тарасович", "Тимофеевич", 
	"Тимурович", "Титович", "Тихонович", "Трифонович", "Трофимович", "Ульянович", "Устинович", "Фадеевич", "Фёдорович", "Федосович", "Федосеевич", "Федотович", 
	"Феликсович", "Феоктистович", "Феофанович", "Феофилович", "Феофилактович", "Ферапонтович", "Филаретович", "Филатович", "Филимонович", "Филипьевич", 
	"Филиппович", "Фирсович", "Флегонтович", "Фокич", "Фомич", "Фридрихович", "Фролович", "Харитонович", "Харламович", "Харлампович", "Хрисанфович", 
	"Христофорович", "Эдуардович", "Эммануилович", "Эрнестович", "Юлианович", "Юрьевич", "Якимович", "Яковлевич"
};
std::vector<std::string> CreateRand::Colors {
	"Серебристо - светло оранжевый", "Серебристо - чёрный", "Белая двухслойная", "Ярко - жёлтый", "Серебристый сине - зелёный",
	"Серебристо - коричневый", "Оливково - зелёный", "Белый металлик", "Серебристый светло - серый", "Ярко - зелёный",
	"Серебристый фиолетовый", "Серебристо - тёмно - зелёный", "Голубой", "Тёмно - вишнёвый", "Серебристо - бежевый",
	"Серебристый оранжевый", "Серебристо - зелёный", "Тёмно - сине - зелёный", "Светло - синий", "(GM)Светло - серый",
	"Серебристо - зелёно - голубой", "Бежевый", "Серо - чёрный", "Тёмно - фиолетовый", "Тёмно - сине - зелёный", "Зелёный",
	"Бежевый", "Бежевый", "Белый", "Белый", "Серебристо - зелёный", "Серебристо - тёмно серый", "Серебристо - серо - синий",
	"Зелёно - голубой", "Бежево - коричневый", "Красный металлик", "Металлик серо - бежевый", "Серо - фиолетовый", "Серо - зелёный",
	"Тёмно - красный", "Тёмно - серый", "Серебристый ярко - красный", "Тёмно - серебристо - красный", "Тёмно - бордовый",
	"Серо - зелёный", "Тёмно - фиолетовый", "Серо - голубой", "Голубой", "Тёмно - бордовый", "Серо - синий", "Серебристо - серо - коричневый",
	"Оранжево - коричневый", "Синий", "Серебристо - жёлтый", "Серебристо - молочно - зелёный", "Бело - жёлтый", "Ярко - жёлтый",
	"Серебристо - бело - молочный", "Серо - синий", "Зелёный", "Бежево - сиреневый", "Тёмно - зелёный", "Зелёный", "Тёмно - зелёный",
	"Бежево - золотистый", "Золотистый тёмно - зелёный", "Серебристо - жёлто - зелёный", "Золотисто - бежевый",
	"Золотистый тёмно - зелёный", "Серебристо - ярко - зелёный", "Тёмно - филетовый", "Серебристо - зелёный", "Тёмно - синий", "Фиолетовый",
	"Красный", "Тёмно - вишнёвый", "Тёмно - зелёный", "Ярко - красный", "Золотисто - красный", "Тёмно - сине - зелёный",
	"Светлый серо - бежевый", "Ярко - красный", "Красный", "Тёмно - серый", "Серо - зелёный", "Тёмно - зелёный", "Золотисто - оливковый",
	"Серебристый тёмно - красный", "Золотисто - коричневый", "Коричневый", "Серебристый болотно - зелёный", "Чёрный", "Серебристо - вишнёвый",
	"Вишнёвый", "Светло - серый", "Красный", "Серебристо - фиолетовый", "Серебристо - коричневый", "Серебристо - синий", "Серебристо - голубой",
	"Фиолетово - синий", "Серебристый тёмно - синий", "Синий", "Зелёный", "Белый", "Голубой", "Светло - голубой", "Тёмно - синий",
	"Серебристо - ярко - фиолетовый", "Оранжевый", "Серебристый тёмно - бордовый", "Красный металлик", "Голубой", "Желто - золотой",
	"Зелёный", "Серебристо - тёмно - синий", "Серебристо - бежево - розовый", "Серебристый - желто - зелёный", "Серебристо - серо - графитовый",
	"Серебристый стальной", "Ярко - синий", "Тёмно - зелёный", "Ярко - фиолетовый", "Сине - зелёный", "Мускари", "Серебристо - серо - золотистый",
	"Жёлтый", "Тёмно - зелёный", "Серебристо - серо - бежевый", "Серебристо - тёмно - серо - синий", "Тёмно - зелёный", "Серебристый - бежевый",
	"Серебристо - серо - голубоватый", "Сине - зелёный", "Серо - синий", "Тёмно - серо - зелёный", "Тёмно - синий", "Золотисто - зелёный",
	"Желто - зелёный", "Ярко - синий", "Серебристо - голубоватый", "Средне - стальной", "Серебристо - бежевый", "Зелено - голубой",
	"Серебристо - серо - зеленоватый", "Серебристо - красно - оранжевый", "Тёмно - синий", "Серо - зеленоватый", "Красно - коричневый",
	"Зелено - синий", "Серебристо - бежевый", "Серо - коричневый", "Тёмно - вишнёвый металлик", "Тёмно - синий", "Ярко - жёлтый",
	"Серебристо - серо - зелёный", "Серебристо - тёмно - синий", "Серебристо - бежевый", "Светло - жёлтый", "Серебристо - ярко - синий",
	"Серебристо - тёмно - синий", "Ярко - красный", "Сине - фиолетовый", "Серебристо - бледно - серый", "Тёмно - коричневый",
	"Тёмно - зелёный", "Тёмно - красный", "Красный", "Тёмно - голубой", "Салатовый", "Ярко - синий", "Бежево - красный",
	"Серебристый сине - фиолетовый", "Светло - бежевый", "Светло - серый", "Серебристый - зеленовато - серый", "Серебристый", "Серо - бежевый",
	"Серо - белый", "Серо - голубой", "Серо - зелёный", "Серый серебристый", "Серо - бежевый", "Тёмно - синий", "Синий", "Светло - фиолетовый",
	"Серо - синий", "Серебристо - ярко - синий", "Сливочно - белый", "Бежево - жёлтый", "Серебристый", "Снежно - белый", "Серебристо - серый",
	"Тёмно коричневый", "Серебристо - серо - зеленоватый", "Серебристый коричнево - зелёный", "Светло - серый", "Тёмно - бежевый",
	"Тёмно - коричневый", "Тёмно - серый", "Тёмно - синий", "Оттенок тёмно - синего", "Серый", "Красный", "Серебристо - красный",
	"Серебристо - зеленоватый", "Сине - зелёный", "Оранжевый", "Ярко - красный", "Чёрный", "Серебристо - сиреневый", "Тёмно - вишнёво - малиновый",
	"Цвет морской волны", "Тёмно - зелёный", "Светло - жёлтый", "Серебристый тёмно - фиолетовый", "Тёмно - алый", "Чёрный, двойная эмаль",
	"Тёмно - синий", "Чёрный", "Оттенок чёрного", "Серебристо - коричневый", "Чёрный", "Тёмно - коричневый", "Тёмно - серый", "Серо - бежевый",
	"Серебристо - голубоватый", "Тёмно - вишнёвый"
};
std::vector<std::string> CreateRand::AVEKMNORSTUH{ "А","В","Е","К","М","Н","О","Р","С","Т","У","Х" };
std::vector<std::string> CreateRand::Brands{ "MAZDA RX7", "TOYOTA SUPRA", "HONDA CIVIC", "NISSAN 180SX", "NISSAN SKYLINE R34 GTR",
"MAZDA MX5 MIATA", "TOYOTA AE86 HACHIROKU", "ACURA NSX MODEX 90TH", "MITSUBISHI LANCER", "NISSAN 370Z", "TOYOTA SELICA 6 GT4" };
std::vector<std::string> CreateRand::Street{ "ЛЮТИКОВ", "РЕВОЛЮЦИИ", "ЛЕНИНА", "ВОССТАНИЯ", "ЦЕНТРАЛЬНАЯ" ,"МОЛОДЁЖНАЯ"
"ШКОЛЬНАЯ","СОВЕТСКАЯ","САДОВАЯ","ЛЕСНАЯ","ПРОЛЕТАРСКАЯ","РАБОЧАЯ","МИРА","НАБЕРЕЖНАЯ","ЗЕЛЁНАЯ","ЗАРЕЧНАЯ","ГАГАРИНА" };
std::vector<std::string> CreateRand::City{ "САНКТ-ПЕТЕРБУРГ","МОСКВА","ВОЛГОГРАД","ТЮМЕНЬ","СОЧИ","НОВГОРОД" };

std::string CreateRand::DriversNumber() {
	std::string number;
	for (size_t i = 0; i < 2; i++) number += _s(rand() % 10);
	number += ' ';
	for (size_t i = 0; i < 2; i++) number += AVEKMNORSTUH[rand() % AVEKMNORSTUH.size()];
	number += ' ';
	for (size_t i = 0; i < 6; i++) number += _s(rand() % 10);
	return number;
}

std::string CreateRand::Name() {
	return CreateRand::ManSurnames[rand() % ManSurnames.size()] + " " +
		CreateRand::ManNames[rand() % ManNames.size()] + " " +
		CreateRand::ManPatron[rand() % ManPatron.size()];
}

std::string CreateRand::PassportData()
{
	std::string number;
	for (int i = 0; i < 10; i++)
	{
		if (i == 4) number += '-';
		number += _s(rand() % 10);
	}
	return number;
}

std::string CreateRand::Address() {
	return City[rand() % City.size()] + " УЛ. " + Street[rand() % Street.size()] + " Д. " + std::to_string(1 + rand() % 199);
}

uint16_t    CreateRand::Year(uint16_t down, uint16_t up)
{
	return down + rand() % std::abs(up - down);
}

std::string CreateRand::Brand() {
	return Brands[rand() % Brands.size()];
}

std::string CreateRand::AutoNumber() {
	std::string number = AVEKMNORSTUH[rand() % AVEKMNORSTUH.size()];
	for (size_t i = 0; i < 3; i++) number += _s(rand() % 10);
	for (size_t i = 0; i < 2; i++) number += AVEKMNORSTUH[rand() % AVEKMNORSTUH.size()];
	number += '-';
	for (size_t i = 0; i < 2; i++) number += _s(rand() % 10);
	return number;
}

std::string CreateRand::Color() {
	return Colors[rand() % Colors.size()];
}

std::string CreateRand::Date() {
	std::string d, m, y;
	d = _s(1 + rand() % 31);
	m = _s(1 + rand() % 12);
	y = _s(2020 + rand() % 4);
	if (d.size() == 1) d = "0" + d;
	if (m.size() == 1) m = "0" + m;
	return d + "/" + m + "/" + y;
}

Client* RandDataCreator::CreateDriver() {
	Client* Driver = new Client();
	Driver->DriversNumber = CreateRand::DriversNumber();
	Driver->Name = CreateRand::Name();
	Driver->PassportData = CreateRand::PassportData();
	Driver->Address = CreateRand::Address();
	return Driver;
}

Auto* RandDataCreator::CreateCar() {
	Auto* Car = new Auto();
	Car->Brand = CreateRand::Brand();
	Car->AutoNumber = CreateRand::AutoNumber();
	Car->Color = CreateRand::Color();
	Car->ReleaseYear = CreateRand::Year(1990, 2000);
	Car->inStock = true;
	return Car;
}

Event* RandDataCreator::CreateTrade(std::string DriversNumber, std::string AutoNumber) {
	Event* Trade = new Event();
	Trade->Event = Event::EVENT::RENTAL;
	Trade->AutoNumber = AutoNumber;
	Trade->DriversNumber = DriversNumber;
	while (true) {
		Trade->BeginDate = CreateRand::Date();
		Trade->EndDate = CreateRand::Date();
		if (!_Check::DateIsReal(Trade->BeginDate)) continue;
		if (!_Check::DateIsReal(Trade->EndDate)) continue;
		if (_Check::LeftDateIsBigger(Trade->BeginDate, Trade->EndDate)) continue;
		break;
	}
	return Trade;
}